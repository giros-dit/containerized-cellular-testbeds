# MIT License
# 
# Copyright (c) 2023 Networking and Virtualization Research Group (GIROS DIT-UPM).
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

### Containerlab topology for Open5GS (LTE EPC -- Evolved Packet Core) ###
name: open5gs-epc

### Topology nodes (entities/elements) ###
topology:
  nodes:    
    ### EPC Elements (Open5GS) ###

    # HSS (Home Subscriber Server):
    hss:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # S6a Interface with MME:
        - ifconfig eth1 10.100.1.1 netmask 255.255.255.0
        # Interface with MongoDB:
        - ifconfig eth2 10.101.1.2 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/hss.log
    
    # MME (Mobility and Management Entity):
    mme:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # S6a Interface with HSS:
        - ifconfig eth1 10.100.1.2 netmask 255.255.255.0
        # S11 Interface with SGW-c:
        - ifconfig eth2 10.102.1.1 netmask 255.255.255.0
        # S1-MME Interface:
        - ifconfig eth3 10.254.1.1 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/mme.log

    # PCRF (Policy and Charging Rules Function):
    pcrf:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # Gx Interface with SMF [PGW-c]:
        - ifconfig eth1 10.103.1.1 netmask 255.255.255.0
        # Interface with MongoDB:
        - ifconfig eth2 10.101.1.3 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/pcrf.log

    # SMF [PGW-c] (Session Management Function -- Packet Data Network Gateway/control plane):
    pgwc:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # Gx Interface with PCRF:
        - ifconfig eth1 10.103.1.2 netmask 255.255.255.0
        # S5c Interface with SGW-c:
        - ifconfig eth2 10.104.1.2 netmask 255.255.255.0
        # Sxb and Sxu Interfaces with PGW-u:
        - ifconfig eth3 10.105.1.1 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/smf.log

    # UPF [PGW-u] (User Plane Function -- Packet Data Network Gateway/user plane):
    pgwu:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # Sxb and Sxu Interfaces with PGW-c:
        - ifconfig eth1 10.105.1.2 netmask 255.255.255.0
        # S5u Interface with SGW-u:
        - ifconfig eth2 10.106.1.2 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/upf.log
        # Obtaining IP address for SGi Interface:
        - dhclient eth3
        # Configuring default route to use SGi Interface:
        - ip route del default
        - ip route add default via 192.168.122.1 dev eth2
        # Configuring TUN interfaces for Open5GS - Internet traffic (internet APN):
        - ip tuntap add name ogstun mode tun
        - ip addr add 172.45.1.1/24 dev ogstun
        - ip link set ogstun up
        # Enabling IPv4 forwarding:
        - sysctl -w net.ipv4.ip_forward=1
        # Creating NAT rule for UEs to have connectivity:
        - iptables -t nat -A POSTROUTING -s 172.45.1.0/24 ! -o ogstun -j MASQUERADE

    # SGW-c (Serving Gateway/control plane):
    sgwc:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # S11 Interface with MME:
        - ifconfig eth1 10.102.1.2 netmask 255.255.255.0
        # S5c Interface with PGW-c:
        - ifconfig eth2 10.104.1.1 netmask 255.255.255.0
        # Sxa Interface with SGW-u:
        - ifconfig eth3 10.107.1.1 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/sgwc.log

    # SGW-u (Serving Gateway/user plane):
    sgwu:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # S5u Interface with PGW-u:
        - ifconfig eth1 10.106.1.1 netmask 255.255.255.0
        # Sxa Interface with SGW-c:
        - ifconfig eth2 10.107.1.2 netmask 255.255.255.0
        # S1-U Interface:
        - ifconfig eth3 10.254.1.10 netmask 255.255.255.0
        # Logging file:
        - touch /var/log/open5gs/sgwu.log

    # MongoDB:
    mongodb:
      kind: linux
      image: giros-dit/mongodb:latest
      exec:
        # Interface with HSS and PCRF:
        - ifconfig eth1 10.101.1.1 netmask 255.255.255.0
    
    # Open5GS WebUI:
    webui:
      kind: linux
      image: giros-dit/open5gs:latest
      exec:
        # Interface with MongoDB:
        - ifconfig eth1 10.101.1.4 netmask 255.255.255.0
    
    # LTE/4G S1 Interface (S1-MME and S1-U) is implemented as an Open vSwitch bridge (br-s1).
    # NOTE: This bridge must be created before deploying the topology.
    br-s1:
      kind: ovs-bridge

    # Interface between EPC components (and WebUI) and MongoDB is implemented as an Open vSwitch bridge (br-mongodb).
    # NOTE: This bridge must be created before deploying the topology.    
    br-mongodb:
      kind: ovs-bridge

    # Open5GS LTE/4G Core SGi Interface (to PDN) is implemented as a Linux bridge (virbr0).
    # NOTE: This bridge must be created before deploying the topology.
    # It is automatically created after installing the libvirt package (and does NAT by default).
    # Subnet for this bridge is 192.168.122.0/24 (host is at 192.168.122.1).
    virbr0:
      kind: bridge

  ### Links between entities (Interfaces) ###
  links:
    # S1 Interface (S1-MME and S1-U):
    - endpoints: ["mme:eth3", "br-s1:mme"]
    - endpoints: ["sgw-u:eth3", "br-s1:sgw-u"]
    # S5c Interface:
    - endpoints: ["sgw-c:eth2", "pgw-c:eth2"]
    # S5u Interface:
    - endpoints: ["sgw-u:eth1", "pgw-u:eth2"]
    # S6a Interface:
    - endpoints: ["mme:eth1", "hss:eth1"]
    # S11 Interface:
    - endpoints: ["mme:eth2", "sgw-c:eth1"]
    # Sxa Interface:
    - endpoints: ["sgw-c:eth3", "sgw-u:eth2"]
    # Sxb and Sxu Interfaces:
    - endpoints: ["pgw-c:eth3", "pgw-u:eth1"]
    # Gx Interface:
    - endpoints: ["pgw-c:eth1", "pcrf:eth1"]
    # SGi Interface:
    - endpoints: ["pgw-u:eth3", "virbr0:pgw-u"]
    # Interfaces with MongoDB:
    - endpoints: ["mongodb:eth1", "br-mongodb:mongodb"]
    - endpoints: ["hss:eth2", "br-mongodb:hss"]
    - endpoints: ["pcrf:eth2", "br-mongodb:pcrf"]
    - endpoints: ["webui:eth1", "br-mongodb:webui"]
